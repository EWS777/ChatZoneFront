import {Component, inject, OnInit, signal} from '@angular/core';
import {RouterOutlet} from '@angular/router';
import {QuickMessageService} from './quick-message.service';
import {QuickMessage} from './quick-message';
import {FormsModule} from '@angular/forms';

@Component({
  selector: 'app-quick-messages',
  imports: [
    RouterOutlet,
    FormsModule
  ],
  templateUrl: './quick-messages.component.html',
  standalone: true,
  styleUrl: './quick-messages.component.css'
})
export class QuickMessagesComponent implements OnInit{
  quickMessageService = inject(QuickMessageService)
  quickMessageList: QuickMessage[] | null = null
  quickMessage: QuickMessage | null = null

  newQuickMessageContent: string = '';

  isCreateOn = signal<boolean>(false)

  changeStatus(){
    this.isCreateOn.update(x=> !x)

  }

  ngOnInit() {
    this.quickMessageService.getQuickMessages().subscribe({
      next: value => {
        this.quickMessageList = value
      },
      error: err => {
        console.error('Unable to get Quick Messages', err)
      }
    })
  }
  create(){
    // this.quickMessage!.idQuickMessage = 0
    // this.quickMessage!.message = this.newQuickMessageContent


    // const newMessage: QuickMessage = {
    //   idQuickMessage: 0, // Assuming ID is generated by the backend, or set a placeholder
    //   message: this.newQuickMessageContent
    // };

    this.quickMessageService.createQuickMessage(this.quickMessage!).subscribe({
      next: value => {
        this.quickMessage = value
      },
      error: err => {
        console.error('Create quick message has not completed!', err)
      }
    })
  }



/*  update(){
    this.quickMessageService.updateQuickMessage(this.quickMessage).subscribe({
      next: value => {
        this.quickMessageList![this.quickMessage.idQuickMessage] = value
      }
    })
  }*/



/*  delete(){
    this.quickMessageService.deleteQuickMessage(this.quickMessage.idQuickMessage)
      .subscribe({
        next: () => {
          this.quickMessageList?.splice(this.quickMessage.idQuickMessage,1)
        },
        error: err => {
          console.error('Delete quick messages has not completed!', err)
        }
    })
  }*/
}
